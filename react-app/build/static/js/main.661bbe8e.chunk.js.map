{"version":3,"sources":["logo.svg","components/Header.jsx","components/score/HumanScore.jsx","components/score/ComputerScore.jsx","components/score/Score.jsx","components/gameOptions/GameOption.jsx","components/Reset.jsx","components/Game.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","style","padding","Component","HumanScore","this","props","humanScore","ComputerScore","computerScore","Score","GameOptions","src","option","name","rounded","fluid","onClick","e","onSelection","id","cursor","Reset","onReset","Game","state","rock","paper","scissors","getComputerChoice","Math","floor","random","handleSelection","selection","computerChoice","console","log","setState","handleReset","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.661bbe8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"text-center text-white\"\r\n        style={{ padding: \"0.5em 0.5em\" }}\r\n      >\r\n        <h1>Rock, Paper, Scissors Game!</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nexport default class HumanScore extends Component {\r\n  render() {\r\n    return (\r\n      <Col className=\"bg-primary\">\r\n        <h1>Human Score: {this.props.humanScore}</h1>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nexport default class ComputerScore extends Component {\r\n  render() {\r\n    return (\r\n      <Col className=\"bg-danger\">\r\n        <h1>Computer Score: {this.props.computerScore}</h1>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport HumanScore from \"./HumanScore\";\r\nimport ComputerScore from \"./ComputerScore\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nexport default class Score extends Component {\r\n  render() {\r\n    return (\r\n      <Row style={{ padding: \"1em 1em\" }}>\r\n        <HumanScore humanScore={this.props.humanScore}></HumanScore>\r\n\r\n        <ComputerScore computerScore={this.props.computerScore}></ComputerScore>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nexport default class GameOptions extends Component {\r\n  render() {\r\n    return (\r\n      <Col>\r\n        <Image\r\n          src={`https://www.rock-paper-scissors-game.com/i/${this.props.option.name}.png`}\r\n          rounded\r\n          fluid\r\n          onClick={e => this.props.onSelection(this.props.option.id)}\r\n          style={{ cursor: \"pointer\" }}\r\n        ></Image>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default class Reset extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          onClick={e => {\r\n            this.props.onReset();\r\n          }}\r\n        >\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Score from \"./score/Score\";\r\nimport GameOption from \"./gameOptions/GameOption\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Reset from \"./Reset\";\r\n\r\nexport default class Game extends Component {\r\n  state = {\r\n    humanScore: 0,\r\n    computerScore: 0,\r\n    rock: {\r\n      id: 0,\r\n      name: \"rock\"\r\n    },\r\n    paper: {\r\n      id: 1,\r\n      name: \"paper\"\r\n    },\r\n    scissors: {\r\n      id: 2,\r\n      name: \"scissors\"\r\n    }\r\n  };\r\n\r\n  getComputerChoice = () => {\r\n    return Math.floor(Math.random() * 3);\r\n  };\r\n\r\n  handleSelection = (selection, e) => {\r\n    const computerChoice = this.getComputerChoice();\r\n\r\n    if (selection === computerChoice) {\r\n      //   alert(\"You are tied.\");\r\n    }\r\n\r\n    switch (selection) {\r\n      case 0:\r\n        console.log(\"rock\");\r\n        if (computerChoice == 1) {\r\n          //   alert(\"You lost.\");\r\n          this.setState({ computerScore: this.state.computerScore + 1 });\r\n        } else if (computerChoice == 2) {\r\n          //   alert(\"You won.\");\r\n          this.setState({ humanScore: this.state.humanScore + 1 });\r\n        }\r\n        break;\r\n      case 1:\r\n        console.log(\"paper\");\r\n        if (computerChoice == 2) {\r\n          //   alert(\"You lost.\");\r\n          this.setState({ computerScore: this.state.computerScore + 1 });\r\n        } else if (computerChoice == 0) {\r\n          //   alert(\"You won.\");\r\n          this.setState({ humanScore: this.state.humanScore + 1 });\r\n        }\r\n        break;\r\n      case 2:\r\n        console.log(\"scissor\");\r\n        if (computerChoice == 0) {\r\n          //   alert(\"You lost.\");\r\n          this.setState({ computerScore: this.state.computerScore + 1 });\r\n        } else if (computerChoice == 1) {\r\n          //   alert(\"You won.\");\r\n          this.setState({ humanScore: this.state.humanScore + 1 });\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({ computerScore: 0, humanScore: 0 });\r\n  };\r\n\r\n  render() {\r\n    const state = this.state;\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Test</h1>\r\n        <Header></Header>\r\n\r\n        <Container className=\"text-center\">\r\n          <Score\r\n            humanScore={state.humanScore}\r\n            computerScore={state.computerScore}\r\n          ></Score>\r\n          <Reset onReset={this.handleReset}></Reset>\r\n          <Row style={{ padding: \"1em 1em\" }}>\r\n            <GameOption\r\n              onSelection={this.handleSelection}\r\n              option={this.state.rock}\r\n            ></GameOption>\r\n            <GameOption\r\n              onSelection={this.handleSelection}\r\n              option={this.state.paper}\r\n            ></GameOption>\r\n            <GameOption\r\n              onSelection={this.handleSelection}\r\n              option={this.state.scissors}\r\n            ></GameOption>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Game from \"./components/Game\";\n\nfunction App() {\n  return <Game></Game>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}